<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.lmy</groupId>
  <artifactId>spring-mybatis1226</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>spring-mybatis1226</name>
  <url>http://maven.apache.org</url>
  
  <!-- spring boot 父节点依赖,引入这个之后相关的引入就不需要添加version配置，spring boot会自动选择最合适的版本进行添加。 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.1.RELEASE</version>
	</parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- 指定一下jdk的版本，这里使用jdk1.7 默认是1.6 -->
		<java-version>1.7</java-version>
  </properties>

  <dependencies>
  	<!-- spring-boot-starter-web: MVC,AOP的依赖包.... -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- <version></version> 由于我们在上面指定了 parent(spring boot) 他会自动根据上面的配置添加版本号 -->
		</dependency>
		
		<!-- 添加fastjson 依赖包. -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.15</version>
		</dependency>
		
		<!-- spring boot devtools 依赖包. -->
			<dependency>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-devtools</artifactId>
	            <optional>true</optional>
	           <scope>true</scope>
			</dependency>
			
		<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
		</dependency>	
		
		<!-- 	
			spring-boot mybatis依赖：
			
			请不要使用1.0.0版本，因为还不支持拦截器插件，
	    	1.1.1 是博主写帖子时候的版本，大家使用最新版本即可
	     -->
		<dependency>
		    <groupId>org.mybatis.spring.boot</groupId>
		    <artifactId>mybatis-spring-boot-starter</artifactId>
		    <version>1.1.1</version>
		</dependency>
		
		<!-- 
	    	MyBatis提供了拦截器接口，我们可以实现自己的拦截器，
	    	将其作为一个plugin装入到SqlSessionFactory中。 
			Github上有位开发者写了一个分页插件，我觉得使用起来还可以，挺方便的。 
			Github项目地址： https://github.com/pagehelper/Mybatis-PageHelper
	     -->	
	    <dependency>
		    <groupId>com.github.pagehelper</groupId>
		    <artifactId>pagehelper</artifactId>
		    <version>4.1.0</version>
		</dependency>	
		
		
  </dependencies>
</project>
